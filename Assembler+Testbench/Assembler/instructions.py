# This is a database for all supported instructions

instruction_dict= {
    # Base
    'LUI':   {'syntax':'r-i',   'i_width':32,   'format':'U',   'opcode':55,    'funct3':0},
    'AUIPC': {'syntax':'r-i',   'i_width':32,   'format':'U',   'opcode':23,    'funct3':0},
    'JAL':   {'syntax':'r-i',   'i_width':21,   'format':'J',   'opcode':111,   'funct3':0},
    'JALR':  {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':103,   'funct3':0},
    'BEQ':   {'syntax':'r-r-i', 'i_width':13,   'format':'B',   'opcode':97,    'funct3':0},
    'BNE':   {'syntax':'r-r-i', 'i_width':13,   'format':'B',   'opcode':97,    'funct3':1},
    'BLT':   {'syntax':'r-r-i', 'i_width':13,   'format':'B',   'opcode':97,    'funct3':4},
    'BGE':   {'syntax':'r-r-i', 'i_width':13,   'format':'B',   'opcode':97,    'funct3':5},
    'BLTU':  {'syntax':'r-r-i', 'i_width':13,   'format':'B',   'opcode':97,    'funct3':6},
    'BGEU':  {'syntax':'r-r-i', 'i_width':13,   'format':'B',   'opcode':97,    'funct3':7},
    'LB':    {'syntax':'r-i_r', 'i_width':12,   'format':'I',   'opcode':3,     'funct3':0},
    'LH':    {'syntax':'r-i_r', 'i_width':12,   'format':'I',   'opcode':3,     'funct3':1},
    'LW':    {'syntax':'r-i_r', 'i_width':12,   'format':'I',   'opcode':3,     'funct3':2},
    'LBU':   {'syntax':'r-i_r', 'i_width':12,   'format':'I',   'opcode':3,     'funct3':4},
    'LHU':   {'syntax':'r-i_r', 'i_width':12,   'format':'I',   'opcode':3,     'funct3':5},
    'SB':    {'syntax':'r-i_r', 'i_width':12,   'format':'S',   'opcode':35,    'funct3':0},
    'SH':    {'syntax':'r-i_r', 'i_width':12,   'format':'S',   'opcode':35,    'funct3':1},
    'SW':    {'syntax':'r-i_r', 'i_width':12,   'format':'S',   'opcode':35,    'funct3':2},
    'ADDI':  {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':19,    'funct3':0},
    'SLTI':  {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':19,    'funct3':2},
    'SLTIU': {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':19,    'funct3':3},
    'XORI':  {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':19,    'funct3':4},
    'ORI':   {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':19,    'funct3':6},
    'ANDI':  {'syntax':'r-r-i', 'i_width':12,   'format':'I',   'opcode':19,    'funct3':7},
    'SLLI':  {'syntax':'r-r-i', 'i_width':12,   'format':'H',   'opcode':19,    'funct3':1, 'funct7':0},
    'SRLI':  {'syntax':'r-r-i', 'i_width':12,   'format':'H',   'opcode':19,    'funct3':5, 'funct7':0},
    'SRAI':  {'syntax':'r-r-i', 'i_width':12,   'format':'H',   'opcode':19,    'funct3':5, 'funct7':32},
    'ADD':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':0, 'funct7':0},
    'SUB':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':0, 'funct7':32},
    'SLL':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':1, 'funct7':0},
    'SLT':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':2, 'funct7':0},
    'SLTU':  {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':3, 'funct7':0},
    'XOR':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':4, 'funct7':0},
    'SRL':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':5, 'funct7':0},
    'SRA':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':5, 'funct7':32},
    'OR':    {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':6, 'funct7':0},
    'AND':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':7, 'funct7':0},
    'FENCE': {'type':'N',                       'format':'F',   'opcode':15},
    'ECALL': {'type':'N',                       'format':'E',   'opcode':115,   'funct12':0},
    'EBREAK':{'type':'N',                       'format':'E',   'opcode':115,   'funct12':1},

    # Multiplication
    'MUL':   {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':0, 'funct7':1},
    'MULH':  {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':1, 'funct7':1},
    'MULHSU':{'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':2, 'funct7':1},
    'MULHU': {'syntax':'r-r-r',                 'format':'R',   'opcode':51,    'funct3':3, 'funct7':1},

    # Compressed
    # Format is as follows:
    # <instruction>, <encoding type>, <opcode>, <funct3/funct2,funct3/funct2,funct6/funct4>
    'C.ADDI4SPN':{'syntax':'r-i','i_width':10,  'format':'CIW', 'opcode':0,     'funct3':0},
    'C.FLD': {'syntax':'r-i_r', 'i_width':8,    'format':'CL',  'opcode':0,     'funct3':1},
    'C.LW':  {'syntax':'r-i_r', 'i_width':7,    'format':'CL',  'opcode':0,     'funct3':2},
    'C.FLW': {'syntax':'r-i_r', 'i_width':7,    'format':'CL',  'opcode':0,     'funct3':2},
    'C.SW':  {'syntax':'r-i_r', 'i_width':7,    'format':'CS',  'opcode':0,     'funct3':6},
    'C.NOP': {'syntax':'i',     'i_width':6,    'format':'CI',  'opcode':1,     'funct3':0},
    'C.ADDI':{'syntax':'r-i',   'i_width':6,    'format':'CI',  'opcode':1,     'funct3':0},
    'C.JAL': {'syntax':'r-i',   'i_width':6,    'format':'CJ',  'opcode':1,     'funct3':1},
    'C.LI':  {'syntax':'r-i',   'i_width':6,    'format':'CI',  'opcode':1,     'funct3':2},
    'C.ADDI16SPN':{'syntax':'i','i_width':10,   'format':'CIW', 'opcode':1,     'funct3':3},
    'C.LUI': {'syntax':'r-i',   'i_width':18,   'format':'CI',  'opcode':1,     'funct3':3},
    'C.SRLI':{'syntax':'r-i',   'i_width':6,    'format':'CH',  'opcode':1,     'funct2':0, 'funct3':4},
    'C.SRAI':{'syntax':'r-i',	'i_width':6,    'format':'CH',  'opcode':1,     'funct2':1, 'funct3':4},
    'C.ANDI':{'syntax':'r-i',	'i_width':6,    'format':'CH',  'opcode':1,     'funct2':2, 'funct3':4},
    'C.SUB': {'syntax':'r-r',	                'format':'CA',  'opcode':1,     'funct2':0, 'funct6':35},
    'C.XOR': {'syntax':'r-r',	                'format':'CA',  'opcode':1,     'funct2':0, 'funct6':35},
    'C.OR':  {'syntax':'r-r',	                'format':'CA',  'opcode':1,     'funct2':0, 'funct6':35},
    'C.AND': {'syntax':'r-r',	                'format':'CA',  'opcode':1,     'funct2':0, 'funct6':35},
    'C.J':   {'syntax':'i',     'i_width':12,   'format':'CJ',  'opcode':1,     'funct3':5},
    'C.BEQZ':{'syntax':'r-i',	'i_width':9,    'format':'CB',  'opcode':1,     'funct3':6},
    'C.BNEZ':{'syntax':'r-i',	'i_width':9,    'format':'CB',  'opcode':1,     'funct3':7},
    'C.SLLI':{'syntax':'r-i',	'i_width':6,    'format':'CI',  'opcode':2,     'funct3':0},
    'C.FLDSP':  {'syntax':'r-i','i_width':9,    'format':'CI',  'opcode':2,     'funct3':1},
    'C.LWSP':   {'syntax':'r-i','i_width':9,    'format':'CI',  'opcode':2,     'funct3':2},
    'C.FLWSP':  {'syntax':'r-i','i_width':9,    'format':'CI',  'opcode':2,     'funct3':3},
    'C.JR':     {'syntax':'r',                  'format':'CR',  'opcode':2,     'funct4':8},
    'C.MV':     {'syntax':'r-r',                'format':'CR',  'opcode':2,     'funct4':8},
    'C.EBREAK': {'syntax':'none',                               'opcode':36866},
    'C.JALR':   {'syntax':'r',	                'format':'CR',  'opcode':2,     'funct4':9},
    'C.ADD':    {'syntax':'r-r',                'format':'CR',  'opcode':2,     'funct4':9},
    'C.FSDSP':  {'syntax':'r-i','i_width':9,    'format':'CI',  'opcode':2,     'funct3':5},
    'C.SWSP':   {'syntax':'r-i','i_width':8,    'format':'CI',  'opcode':2,     'funct3':6},
    'C.FSWSP':  {'syntax':'r-i','i_width':8,    'format':'CI',  'opcode':2,     'funct3':7},
}